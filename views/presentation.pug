doctype html
head
  meta(charset='utf-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
  title CC Presentation
  link(rel='stylesheet' href='/css/reset.css')
  link(rel='stylesheet' href='/css/reveal.css')
  link(rel='stylesheet' href='/css/theme/cc.css')
  //- Font awesome
  script(src='https://kit.fontawesome.com/7796f0cca1.js')
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css')
  //- Printing and PDF exports
  script.
    var link = document.createElement( 'link' );
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = window.location.search.match( /print-pdf/gi ) ? '/css/print/pdf.css' : '/css/print/paper.css';
    document.getElementsByTagName( 'head' )[0].appendChild( link );
.reveal
  //- Actual slides code
  div.slides
    section This is
    section Reveal JS
    section on Classroom Companion
script(src='/scripts/reveal.js')
script.
  var isPdf = false; // A quick check so that buttons do not show up on pdf friendly version
  "link".href = window.location.search.match( /print-pdf/gi ) ? isPdf = true : isPdf = false;
  Reveal.initialize({
    hash: true,
    chalkboard: {
    theme: "whiteboard",
    src: "yourDrawings.json",
    readOnly: false, // Lets user go back and edit the drawing after leaving slide
    toggleNotesButton: !isPdf,
    toggleChalkboardButton: !isPdf,
  },
  dependencies: [
    { src: '/plugin/chalkboard/chalkboard.js' },
    { src: '/plugin/markdown/marked.js' },
    { src: '/plugin/markdown/markdown.js' },
    { src: '/plugin/highlight/highlight.js' },
    { src: '/plugin/notes/notes.js', async: true }
  ],
  keyboard: {
    67: function() { RevealChalkboard.toggleNotesCanvas() },// toggle notes canvas when 'c' is pressed
    66: function() { RevealChalkboard.toggleChalkboard() },	// toggle chalkboard when 'b' is pressed
    46: function() { RevealChalkboard.clear() },			// clear chalkboard when 'DEL' is pressed
    8: function() { RevealChalkboard.reset() },			// reset chalkboard data on current slide when 'BACKSPACE' is pressed
    68: function() { RevealChalkboard.download() },			// download chalkboard drawing when 'd' is pressed
    88: function() { RevealChalkboard.colorNext() },		// cycle colors forward when 'x' is pressed
    89: function() { RevealChalkboard.colorPrev() },		// cycle colors backward when 'y' is pressed
    13: 'next', 											// go to next slide when 'enter' is pressed
    27: function() { window.close() },						// close slideshow when 'esc' is pressed
    },
  });
